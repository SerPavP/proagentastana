# Generated by Django 5.2.3 on 2025-07-14 01:05

from django.db import migrations


def update_repair_types(apps, schema_editor):
    """Update repair types data according to new requirements"""
    
    # Get model classes
    RepairType = apps.get_model('main', 'RepairType')
    Announcement = apps.get_model('main', 'Announcement')
    
    # First, update all existing announcements to use "Новый ремонт"
    # This ensures no data is lost when we remove old repair types
    Announcement.objects.all().update(repair_status="Новый ремонт")
    
    # Delete all existing repair types
    RepairType.objects.all().delete()
    
    # Create new repair types according to the image
    new_repair_types = [
        {'code': 'raw', 'name': 'Черновая отделка'},
        {'code': 'new', 'name': 'Новый ремонт'},
        {'code': 'neat', 'name': 'Не новый, но аккуратный ремонт'},
        {'code': 'old', 'name': 'Старый ремонт'},
    ]
    
    for repair_data in new_repair_types:
        RepairType.objects.create(
            code=repair_data['code'],
            name=repair_data['name'],
            is_active=True
        )


def reverse_update_repair_types(apps, schema_editor):
    """Reverse the repair types update"""
    
    # Get model classes
    RepairType = apps.get_model('main', 'RepairType')
    
    # Delete current repair types
    RepairType.objects.all().delete()
    
    # Restore old repair types
    old_repair_types = [
        {'code': 'raw', 'name': 'Черновая отделка'},
        {'code': 'new', 'name': 'Новый ремонт'},
        {'code': 'neat', 'name': 'Аккуратный ремонт'},
        {'code': 'old', 'name': 'Старый ремонт'},
    ]
    
    for repair_data in old_repair_types:
        RepairType.objects.create(
            code=repair_data['code'],
            name=repair_data['name'],
            is_active=True
        )


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0017_landmark_announcement_commission_percentage_and_more'),
    ]

    operations = [
        migrations.RunPython(update_repair_types, reverse_update_repair_types),
    ]
