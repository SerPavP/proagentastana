#!/usr/bin/env python
"""
–ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Neon Database
"""
import os
import sys
import subprocess

def create_env_template():
    """–°–æ–∑–¥–∞—ë—Ç —à–∞–±–ª–æ–Ω .env —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç"""
    if os.path.exists('.env'):
        print("‚úÖ –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return True
    
    env_template = """# Neon Database Configuration
DATABASE_URL=postgresql://username:password@hostname/database_name?sslmode=require

# Django Configuration  
SECRET_KEY=your-secret-key-here
DEBUG=True

# Optional for production
# ALLOWED_HOSTS=localhost,127.0.0.1,yourdomain.com
# CSRF_TRUSTED_ORIGINS=https://yourdomain.com
"""
    
    try:
        with open('.env', 'w', encoding='utf-8') as f:
            f.write(env_template)
        print("‚úÖ –°–æ–∑–¥–∞–Ω —à–∞–±–ª–æ–Ω .env —Ñ–∞–π–ª–∞")
        print("üìù –ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å DATABASE_URL –∏ SECRET_KEY!")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è .env —Ñ–∞–π–ª–∞: {e}")
        return False

def install_requirements():
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"""
    try:
        print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
        subprocess.run([sys.executable, '-m', 'pip', 'install', '-r', 'requirements.txt'], 
                      check=True, capture_output=True, text=True)
        print("‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: {e}")
        print(f"–î–µ—Ç–∞–ª–∏: {e.stderr}")
        return False

def run_migrations():
    """–ü—Ä–∏–º–µ–Ω—è–µ—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –ø—Ä–æ–±–ª–µ–º"""
    try:
        print("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π...")
        subprocess.run([sys.executable, 'manage.py', 'makemigrations'], 
                      check=True, capture_output=True, text=True)
        
        print("üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –ø—Ä–æ–±–ª–µ–º...")
        result = subprocess.run([sys.executable, 'fix_migrations.py'], 
                               capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π")
            print(result.stdout)
            print(result.stderr)
            return False
            
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π: {e}")
        print(f"–î–µ—Ç–∞–ª–∏: {e.stderr}")
        return False

def check_connection():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î"""
    try:
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        result = subprocess.run([sys.executable, 'check_db_connection.py'], 
                               capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            return True
        else:
            print("‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            print(result.stdout)
            print(result.stderr)
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def main():
    print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Neon Database\n")
    
    steps = [
        ("–°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞", create_env_template),
        ("–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π", install_requirements),
        ("–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π", run_migrations),
        ("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è", check_connection),
    ]
    
    for step_name, step_func in steps:
        print(f"\nüìã {step_name}...")
        if not step_func():
            print(f"\n‚ùå –û—à–∏–±–∫–∞ –Ω–∞ —ç—Ç–∞–ø–µ: {step_name}")
            print("üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")
            return False
    
    print("\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    print("\nüìö –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –û–±–Ω–æ–≤–∏—Ç–µ DATABASE_URL –≤ —Ñ–∞–π–ª–µ .env")
    print("2. –û–±–Ω–æ–≤–∏—Ç–µ SECRET_KEY –≤ —Ñ–∞–π–ª–µ .env")
    print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: python manage.py runserver")
    print("\nüìñ –ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: neon_setup_guide.md")
    
    return True

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1) 